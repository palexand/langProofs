(langProofs
 (lookupType_TCC1 0
  (lookupType_TCC1-1 nil 3442508908 3442930139
   ("" (termination-tcc) nil nil) unchecked
   ((length def-decl "nat" list_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   216 80 t nil))
 (lookupLemma 0
  (lookupLemma-1 nil 3442933448 3443911767
   ("" (induct "g")
    (("1" (skosimp*) (("1" (grind) nil nil)) nil)
     ("2" (skosimp*)
      (("2" (inst -1 "v!1")
        (("2" (inst -1 "v1!1" "ty!1") (("2" (grind) nil nil)) nil))
        nil))
      nil))
    nil)
   unchecked
   ((list type-decl nil list_adt nil)
    (Gamma type-eq-decl nil langProofs nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (lookupType def-decl "Ty" langProofs nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (Ty type-decl nil langProofs nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (list_induction formula-decl nil list_adt nil))
   307 90 t shostak))
 (subst_TCC1 0
  (subst_TCC1-1 nil 3442465419 3442930158
   ("" (termination-tcc) nil nil) unchecked
   ((<< adt-def-decl "(well_founded?[Term])" langProofs nil)) 102 20 t
   nil))
 (subst_TCC2 0
  (subst_TCC2-1 nil 3442465419 3442930166
   ("" (termination-tcc) nil nil) unchecked
   ((<< adt-def-decl "(well_founded?[Term])" langProofs nil)) 105 20 t
   nil))
 (subst_TCC3 0
  (subst_TCC3-1 nil 3442465419 3442930172
   ("" (termination-tcc) nil nil) unchecked
   ((<< adt-def-decl "(well_founded?[Term])" langProofs nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   98 20 t nil))
 (subst_TCC4 0
  (subst_TCC4-1 nil 3442465419 3442930231
   ("" (cases-tcc) (("" (grind) nil nil)) nil) unchecked
   ((<< adt-def-decl "(well_founded?[Term])" langProofs nil)) 14172 30
   t nil))
 (subst_TCC5 0
  (subst_TCC5-1 nil 3442703453 3442930203
   ("" (termination-tcc) nil nil) unchecked
   ((<< adt-def-decl "(well_founded?[Term])" langProofs nil)) 89 10 t
   nil))
 (typeof_TCC1 0
  (typeof_TCC1-1 nil 3442881647 3442930237
   ("" (termination-tcc) nil nil) unchecked
   ((<< adt-def-decl "(well_founded?[Term])" langProofs nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   68 20 t nil))
 (eval_TCC1 0
  (eval_TCC1-1 nil 3442462569 3442930268 ("" (termination-tcc) nil nil)
   unfinished nil 23064 40 t nil))
 (eval_TCC2 0
  (eval_TCC2-1 nil 3442462569 nil ("" (termination-tcc) nil nil)
   unfinished nil nil nil nil nil))
 (eval_TCC3 0
  (eval_TCC3-1 nil 3442463469 3442930283 ("" (termination-tcc) nil nil)
   unfinished nil 9661 80 t nil))
 (eval_TCC4 0
  (eval_TCC4-1 nil 3442465419 3442930301 ("" (subtype-tcc) nil nil)
   unfinished nil 10482 40 t nil))
 (t1 0
  (t1-1 nil 3442462581 3442881680
   ("" (expand "eval") (("" (propax) nil nil)) nil) unchecked
   ((eval def-decl "Term" langProofs nil)) 127 20 t shostak))
 (t2 0
  (t2-1 nil 3442462744 3442881689
   ("" (expand "eval")
    (("" (expand "eval") (("" (propax) nil nil)) nil)) nil)
   unchecked ((eval def-decl "Term" langProofs nil)) 111 20 t shostak))
 (t3 0
  (t3-1 nil 3442463470 3442881694
   ("" (expand "eval") (("" (propax) nil nil)) nil) unchecked
   ((eval def-decl "Term" langProofs nil)) 106 0 t shostak))
 (t4 0
  (t4-1 nil 3442465420 3442881697
   ("" (expand "eval")
    (("" (expand "subst") (("" (grind) nil nil)) nil)) nil)
   unchecked
   ((eval def-decl "Term" langProofs nil)
    (subst def-decl "Term" langProofs nil))
   121 20 t shostak))
 (t_num 0
  (t_num-1 nil 3442882514 3442882533
   ("" (skosimp*) (("" (expand "typeof") (("" (propax) nil nil)) nil))
    nil)
   unchecked ((typeof def-decl "Ty" langProofs nil)) 18602 10 t
   shostak))
 (t_bool 0
  (t_bool-1 nil 3442882619 3442882693
   ("" (skosimp*) (("" (expand "typeof") (("" (propax) nil nil)) nil))
    nil)
   unchecked ((typeof def-decl "Ty" langProofs nil)) 20640 0 t
   shostak))
 (t_plus 0
  (t_plus-1 nil 3442882267 3442882385
   ("" (skosimp*)
    (("" (expand "typeof" 1)
      (("" (simplify) (("" (ground) nil nil)) nil)) nil))
    nil)
   unchecked ((typeof def-decl "Ty" langProofs nil)) 118108 620 t
   shostak))
 (t_var 0
  (t_var-1 nil 3442888851 3442888870
   ("" (skosimp*) (("" (expand "typeof") (("" (propax) nil nil)) nil))
    nil)
   unchecked ((typeof def-decl "Ty" langProofs nil)) 19357 10 t
   shostak))
 (t_lambda 0
  (t_lambda-1 nil 3442883469 3442883498
   ("" (skosimp*) (("" (expand "typeof" 1) (("" (grind) nil nil)) nil))
    nil)
   unchecked ((typeof def-decl "Ty" langProofs nil)) 28411 20 t
   shostak))
 (t_app 0
  (t_app-1 nil 3442883840 3442883855
   ("" (skosimp*) (("" (expand "typeof" 1) (("" (grind) nil nil)) nil))
    nil)
   unchecked ((typeof def-decl "Ty" langProofs nil)) 14789 30 t
   shostak))
 (subj_red_tPlus_1 0
  (subj_red_tPlus_1-1 nil 3442881701 3442881714
   ("" (skosimp*) (("" (grind) nil nil)) nil) unchecked
   ((typeof def-decl "Ty" langProofs nil)) 13044 60 t shostak))
 (subj_red_tPlus 0
  (subj_red_tPlus-1 nil 3442881721 3442881724 ("" (grind) nil nil)
   unchecked
   ((typeof def-decl "Ty" langProofs nil)
    (eval def-decl "Term" langProofs nil))
   2959 20 t shostak))
 (tNum_can 0
  (tNum_can-1 nil 3442886162 3442886179
   ("" (skosimp*) (("" (expand "typeof") (("" (grind) nil nil)) nil))
    nil)
   unchecked ((typeof def-decl "Ty" langProofs nil)) 16824 30 t
   shostak))
 (tPlus_inv 0
  (tPlus_inv-1 nil 3442885683 3442886301
   ("" (skosimp*)
    (("" (expand "typeof")
      (("" (grind)
        (("1" (lemma "tNum_can")
          (("1" (inst -1 "t2(t!1)" "g!1") (("1" (grind) nil nil)) nil))
          nil)
         ("2" (lemma "tNum_can")
          (("2" (inst -1 "t1(t!1)" "g!1") (("2" (grind) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   unchecked
   ((Term type-decl nil langProofs nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (tPlus? adt-recognizer-decl "[Term -> boolean]" langProofs nil)
    (tApp? adt-recognizer-decl "[Term -> boolean]" langProofs nil)
    (t2 shared-adt-accessor-decl
     "[{x: Term | tPlus?(x) OR tApp?(x)} -> Term]" langProofs nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (Ty type-decl nil langProofs nil) (list type-decl nil list_adt nil)
    (Gamma type-eq-decl nil langProofs nil)
    (tNum_can formula-decl nil langProofs nil)
    (t1 shared-adt-accessor-decl
     "[{x: Term | tPlus?(x) OR tApp?(x)} -> Term]" langProofs nil)
    (typeof def-decl "Ty" langProofs nil))
   112509 440 t shostak))
 (lemma1 0
  (lemma1-1 nil 3443913432 3443913462
   ("" (skosimp*) (("" (grind) nil nil)) nil) proved
   ((lookupType def-decl "Ty" langProofs nil)) 30008 10 t shostak))
 (subj_red_subst 0
  (subj_red_subst-1 nil 3442704123 3443912036
   ("" (induct "t")
    (("1" (skosimp*)
      (("1" (lemma "t_num")
        (("1" (inst -1 "g!1" "tNum1_var!1") (("1" (grind) nil nil))
          nil))
        nil))
      nil)
     ("2" (skosimp*)
      (("2" (lemma "t_bool")
        (("2" (inst -1 "g!1" "tBool1_var!1") (("2" (grind) nil nil))
          nil))
        nil))
      nil)
     ("3" (skosimp*)
      (("3" (inst -1 "g!1")
        (("3" (inst -2 "g!1") (("3" (grind) nil nil)) nil)) nil))
      nil)
     ("4" (skosimp*)
      (("4" (lemma "t_var")
        (("4" (inst -1 "g!1" "v!1" "typeof(t1!1, g!1)")
          (("4" (grind) nil nil)) nil))
        nil))
      nil)
     ("5" (skosimp*)
      (("5" (inst -1 "g!1")
        (("5" (inst -1 "v!1" "t1!1")
          (("5" (simplify)
            (("5" (ground)
              (("5" (expand "subst" 1)
                (("5" (ground)
                  (("5" (lift-if)
                    (("5" (grind)
                      (("5" (lemma "t_lambda")
                        (("5" (grind) (("5" (postpone) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("6" (skosimp*)
      (("6" (inst - "g!1")
        (("6" (inst -2 "g!1")
          (("6" (inst -1 "v!1" "t1!1")
            (("6" (inst -2 "v!1" "t1!1")
              (("6" (expand "subst" 1)
                (("6" (simplify)
                  (("6" (assert)
                    (("6" (expand "typeof" 1)
                      (("6" (lift-if)
                        (("6" (simplify) (("6" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished nil 76170 310 t shostak))
 (subj_red 0
  (subj_red-1 nil 3442463941 3442464046
   ("" (ground)
    (("" (expand "typeof")
      (("" (expand "eval")
        (("" (grind)
          (("1" (expand "typeof")
            (("1" (grind)
              (("1" (postpone) nil nil) ("2" (postpone) nil nil)
               ("3" (postpone) nil nil))
              nil))
            nil)
           ("2" (postpone) nil nil))
          nil))
        nil))
      nil))
    nil)
   unfinished nil 105408 150 t shostak)))

